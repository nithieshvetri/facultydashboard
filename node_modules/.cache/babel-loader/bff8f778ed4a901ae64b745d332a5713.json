{"ast":null,"code":"import _regeneratorRuntime from\"D:/PROJECT/practice/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/PROJECT/practice/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/PROJECT/practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useState,useEffect}from'react';import jwt_decode from\"jwt-decode\";import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/createContext();export default AuthContext;export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(function(){return localStorage.getItem('authTokens')?JSON.parse(localStorage.getItem('authTokens')):null;}),_useState2=_slicedToArray(_useState,2),authTokens=_useState2[0],setAuthTokens=_useState2[1];var _useState3=useState(function(){return localStorage.getItem('authTokens')?jwt_decode(localStorage.getItem('authTokens')):null;}),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var history=useHistory();var base=\"https://facultydashboard.bitsathy.ac.in/\";console.log(\"welcom\",base);var loginUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return fetch(\"\".concat(base,\"api/token/\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'email':e.target.username.value,'password':e.target.password.value})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;if(response.status===200){setAuthTokens(data);setUser(jwt_decode(data.access));localStorage.setItem('authTokens',JSON.stringify(data));history.push('/');}else{alert('PLEASE ENTER THE VALID DETAILS');}case 8:case\"end\":return _context.stop();}}},_callee);}));return function loginUser(_x){return _ref2.apply(this,arguments);};}();var logoutUser=function logoutUser(){setAuthTokens(null);setUser(null);localStorage.removeItem('authTokens');history.push('/login');};console.log(authTokens);var updateToken=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(base,\"api/token/refresh/\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'refresh':authTokens===null||authTokens===void 0?void 0:authTokens.refresh})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;if(response.status===200){setAuthTokens(data);setUser(jwt_decode(data.access));localStorage.setItem('authTokens',JSON.stringify(data));}else{logoutUser();}if(loading){setLoading(false);}case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function updateToken(){return _ref3.apply(this,arguments);};}();var contextData={user:user,authTokens:authTokens,loginUser:loginUser,logoutUser:logoutUser};useEffect(function(){if(loading){updateToken();}var fourMinutes=1000*60*4;var interval=setInterval(function(){if(authTokens){updateToken();}},fourMinutes);return function(){return clearInterval(interval);};},[authTokens,loading]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextData,children:loading?null:children});};","map":{"version":3,"sources":["D:/PROJECT/practice/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","useHistory","AuthContext","AuthProvider","children","localStorage","getItem","JSON","parse","authTokens","setAuthTokens","user","setUser","loading","setLoading","history","base","console","log","loginUser","e","preventDefault","fetch","method","headers","body","stringify","target","username","value","password","response","json","data","status","access","setItem","push","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval"],"mappings":"+SAAA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGL,aAAa,EAAjC,CAEA,cAAeK,CAAAA,WAAf,CAGA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CACxC,cAAkCN,QAAQ,CAAC,iBAAKO,CAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,CAAsF,IAA3F,EAAD,CAA1C,wCAAKG,UAAL,eAAiBC,aAAjB,eACA,eAAsBZ,QAAQ,CAAC,iBAAKO,CAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAqCN,UAAU,CAACK,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAA/C,CAAsF,IAA3F,EAAD,CAA9B,yCAAKK,IAAL,eAAWC,OAAX,eACA,eAA4Bd,QAAQ,CAAC,IAAD,CAApC,yCAAKe,OAAL,eAAcC,UAAd,eAEA,GAAMC,CAAAA,OAAO,CAAGd,UAAU,EAA1B,CAEA,GAAMe,CAAAA,IAAI,CAAC,0CAAX,CACJC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAqBF,IAArB,EACI,GAAIG,CAAAA,SAAS,2FAAG,iBAAOC,CAAP,oIACZA,CAAC,CAACC,cAAF,GADY,sBAESC,CAAAA,KAAK,WAAIN,IAAJ,eAAsB,CAC5CO,MAAM,CAAC,MADqC,CAE5CC,OAAO,CAAC,CACJ,eAAe,kBADX,CAFoC,CAK5CC,IAAI,CAAClB,IAAI,CAACmB,SAAL,CAAe,CAAC,QAAQN,CAAC,CAACO,MAAF,CAASC,QAAT,CAAkBC,KAA3B,CAAkC,WAAWT,CAAC,CAACO,MAAF,CAASG,QAAT,CAAkBD,KAA/D,CAAf,CALuC,CAAtB,CAFd,QAERE,QAFQ,qCASKA,CAAAA,QAAQ,CAACC,IAAT,EATL,QASRC,IATQ,eAWZ,GAAGF,QAAQ,CAACG,MAAT,GAAoB,GAAvB,CAA2B,CACvBxB,aAAa,CAACuB,IAAD,CAAb,CACArB,OAAO,CAACZ,UAAU,CAACiC,IAAI,CAACE,MAAN,CAAX,CAAP,CACA9B,YAAY,CAAC+B,OAAb,CAAqB,YAArB,CAAmC7B,IAAI,CAACmB,SAAL,CAAeO,IAAf,CAAnC,EACAlB,OAAO,CAACsB,IAAR,CAAa,GAAb,EACH,CALD,IAKK,CACDC,KAAK,CAAC,gCAAD,CAAL,CACH,CAlBW,sDAAH,kBAATnB,CAAAA,SAAS,6CAAb,CAsBA,GAAIoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACnB7B,aAAa,CAAC,IAAD,CAAb,CACAE,OAAO,CAAC,IAAD,CAAP,CACAP,YAAY,CAACmC,UAAb,CAAwB,YAAxB,EACAzB,OAAO,CAACsB,IAAR,CAAa,QAAb,EACH,CALD,CAOJpB,OAAO,CAACC,GAAR,CAAYT,UAAZ,EACI,GAAIgC,CAAAA,WAAW,2FAAG,iLAEOnB,CAAAA,KAAK,WAAIN,IAAJ,uBAA8B,CACpDO,MAAM,CAAC,MAD6C,CAEpDC,OAAO,CAAC,CACJ,eAAe,kBADX,CAF4C,CAKpDC,IAAI,CAAClB,IAAI,CAACmB,SAAL,CAAe,CAAC,UAAUjB,UAAV,SAAUA,UAAV,iBAAUA,UAAU,CAAEiC,OAAvB,CAAf,CAL+C,CAA9B,CAFZ,QAEVX,QAFU,uCAUGA,CAAAA,QAAQ,CAACC,IAAT,EAVH,QAUVC,IAVU,gBAYd,GAAIF,QAAQ,CAACG,MAAT,GAAoB,GAAxB,CAA4B,CACxBxB,aAAa,CAACuB,IAAD,CAAb,CACArB,OAAO,CAACZ,UAAU,CAACiC,IAAI,CAACE,MAAN,CAAX,CAAP,CACA9B,YAAY,CAAC+B,OAAb,CAAqB,YAArB,CAAmC7B,IAAI,CAACmB,SAAL,CAAeO,IAAf,CAAnC,EACH,CAJD,IAIK,CACDM,UAAU,GACb,CAED,GAAG1B,OAAH,CAAW,CACPC,UAAU,CAAC,KAAD,CAAV,CACH,CAtBa,wDAAH,kBAAX2B,CAAAA,WAAW,2CAAf,CAyBA,GAAIE,CAAAA,WAAW,CAAG,CACdhC,IAAI,CAACA,IADS,CAEdF,UAAU,CAACA,UAFG,CAGdU,SAAS,CAACA,SAHI,CAIdoB,UAAU,CAACA,UAJG,CAAlB,CAQAxC,SAAS,CAAC,UAAK,CAEX,GAAGc,OAAH,CAAW,CACP4B,WAAW,GACd,CAED,GAAIG,CAAAA,WAAW,CAAG,KAAO,EAAP,CAAY,CAA9B,CAEA,GAAIC,CAAAA,QAAQ,CAAIC,WAAW,CAAC,UAAK,CAC7B,GAAGrC,UAAH,CAAc,CACVgC,WAAW,GACd,CACJ,CAJ0B,CAIxBG,WAJwB,CAA3B,CAKA,MAAO,kBAAKG,CAAAA,aAAa,CAACF,QAAD,CAAlB,EAAP,CAEH,CAfQ,CAeN,CAACpC,UAAD,CAAaI,OAAb,CAfM,CAAT,CAiBA,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE8B,WAA7B,UACK9B,OAAO,CAAG,IAAH,CAAUT,QADtB,EADJ,CAKH,CA9FM","sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom'\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider = ({children}) => {\n    let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\n    let [loading, setLoading] = useState(true)\n\n    const history = useHistory()\n\n    const base=\"https://facultydashboard.bitsathy.ac.in/\"\nconsole.log(\"welcom\",base)\n    let loginUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`${base}api/token/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'email':e.target.username.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            history.push('/')\n        }else{\n            alert('PLEASE ENTER THE VALID DETAILS')\n        }\n    }\n\n\n    let logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\nconsole.log(authTokens)\n    let updateToken = async ()=> {\n\n        let response = await fetch(`${base}api/token/refresh/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'refresh':authTokens?.refresh})\n        })\n\n        let data = await response.json()\n        \n        if (response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }else{\n            logoutUser()\n        }\n\n        if(loading){\n            setLoading(false)\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n\n    useEffect(()=> {\n\n        if(loading){\n            updateToken()\n        }\n\n        let fourMinutes = 1000 * 60 * 4\n\n        let interval =  setInterval(()=> {\n            if(authTokens){\n                updateToken()\n            }\n        }, fourMinutes)\n        return ()=> clearInterval(interval)\n\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}