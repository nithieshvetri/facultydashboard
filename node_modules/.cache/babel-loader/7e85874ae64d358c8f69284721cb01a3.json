{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT\\\\practice\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const history = useHistory();\n  const base = \"https://facultydashboard.bitsathy.ac.in/\";\n  console.log(\"welcom\", base);\n\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch(`${base}api/token/`, {\n      mode: 'no-cors',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'email': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      history.push('/');\n    } else {\n      alert('PLEASE ENTER THE VALID DETAILS');\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    history.push('/login');\n  };\n\n  console.log(authTokens);\n\n  let updateToken = async () => {\n    let response = await fetch(`${base}api/token/refresh/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthProvider, \"aBbTXfZfqHsHQ1PD0tesWqDhSTA=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/PROJECT/practice/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","useHistory","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","base","console","log","loginUser","e","preventDefault","response","fetch","mode","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","push","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom'\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider = ({children}) => {\n    let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\n    let [loading, setLoading] = useState(true)\n\n    const history = useHistory()\n\n    const base=\"https://facultydashboard.bitsathy.ac.in/\"\nconsole.log(\"welcom\",base)\n    let loginUser = async (e )=> {\n        e.preventDefault()\n        let response = await fetch(`${base}api/token/`, {\n            mode: 'no-cors',\n\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'email':e.target.username.value, 'password':e.target.password.value})\n        })\n        let data = await response.json()\n\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            history.push('/')\n        }else{\n            alert('PLEASE ENTER THE VALID DETAILS')\n        }\n    }\n\n\n    let logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\nconsole.log(authTokens)\n    let updateToken = async ()=> {\n\n        let response = await fetch(`${base}api/token/refresh/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'refresh':authTokens?.refresh})\n        })\n\n        let data = await response.json()\n        \n        if (response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }else{\n            logoutUser()\n        }\n\n        if(loading){\n            setLoading(false)\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n\n    useEffect(()=> {\n\n        if(loading){\n            updateToken()\n        }\n\n        let fourMinutes = 1000 * 60 * 4\n\n        let interval =  setInterval(()=> {\n            if(authTokens){\n                updateToken()\n            }\n        }, fourMinutes)\n        return ()=> clearInterval(interval)\n\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}